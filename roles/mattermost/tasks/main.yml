# Not need to install by os distribution because Mattermost is used Go language

# install Mattermost
- name: Create Mattermost System User
  user:
      name: mattermost 
      create_home: no 
      home: /opt/mattermost
      shell: /usr/sbin/nologin

- name: Download Mattermost
  unarchive:
      src: "{{mattermost_download_url}}"
      dest: /opt/ 
      group: mattermost 
      remote_src: yes
      owner: mattermost
      mode: g+w

- name: Create the storage directory for files.
  file:
      path: /opt/mattermost/data
      state: directory 
      owner: mattermost 
      group: mattermost
      mode: g+w
      
- name: Set database connection DataSource
  lineinfile:
    dest: /opt/mattermost/config/config.json
    regexp: '"DataSource":'
    line: '    "DataSource": "{{mattermost_db_user}}:{{mattermost_db_password}}@tcp(localhost:3306)/{{mattermost_db_name}}?charset=utf8mb4,utf8&readTimeout=30s&writeTimeout=30s",'
    backrefs: yes 

- name: Change database connection type
  shell: sed -i 's/postgres/mysql/g' /opt/mattermost/config/config.json

- name: Setup Mattermost to use systemd for starting and stopping.
  copy:
    src: mattermost.service
    dest: /lib/systemd/system/mattermost.service

- name: Start service mattermost, if not started
  service:
    name: mattermost
    state: started
    enabled: yes

- name: set reverse porxy
  copy: 
    src: nginx_default
    dest: /etc/nginx/conf.d/default.conf

- name: restart nginx
  service: name=nginx state=restarted enabled=yes

# set soft link, -b over
# ln -sb src des
- name: set soft link
  shell: |
    ln -sf /opt/mattermost  /data/wwwroot
    ln -sf /opt/mattermost/config /data/config

# display version and service state of components
- name: Get mattermost version
  shell: >
    sudo sh -c 'echo "Mattermost version is $(/opt/mattermost/bin/mattermost version |grep Version  |head -1 |cut -d: -f2)" 1>> /data/logs/install_version.txt'

- name: Check mattermost Service
  shell: systemctl status mattermost | grep Active*
  register: check_mattermost_service
  notify: check_mattermost_service
